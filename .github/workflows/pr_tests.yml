name: Tests

permissions:
  contents: read

on:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - "LICENSE"
      - "docs/**"
      - "**.sh"
      - "**.md"
      - "scripts/**"

  push:
    branches:
      - "main"
      - "develop"
    paths-ignore:
      - "LICENSE"
      - "**.sh"
      - "**.md"
      - "scripts/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-builds:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Build binary for ${{ matrix.goos }}/${{ matrix.goarch }}
        run: |
          GOEXPERIMENT=jsonv2,greenteagc GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ./bin/jiotv_go-${{ matrix.goos }}-${{ matrix.goarch }} -ldflags "-s -w" .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: jiotv_go-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./bin/

  go-tests:
    name: Run Go Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install Dependencies
        run: go mod tidy

      - name: Run Tests
        run: go test -v ./...

  web-tests:
    name: Run Web Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"
          cache-dependency-path: "web/package-lock.json"

      - name: Install Dependencies
        run: |
          cd web
          npm ci

      - name: Run Tests
        run: |
          cd web
          npm test -- --watchAll=false --ci
