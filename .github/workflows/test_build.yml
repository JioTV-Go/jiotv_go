name: Test build for PR

on:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - "docs/**"
      - "**.sh"
      - "**.md"
      - "scripts/**"
      - ".github/workflows/dependabot_action.yml"
      - ".github/workflows/pre-release.yml"
      - ".github/workflows/test-build.yml"
      - ".github/workflows/docker.yml"
      - ".github/dependabot.yml"
      - ".github/workflows/sync-wiki.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
    init:
      permissions:
          contents: read
          pull-requests: write
      runs-on: ubuntu-latest
      steps:
        - name: Comment Build started
          run: |
            gh pr comment "$PR_URL" -b "Build started for this PR. [Check logs](${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }})"
          env:
            PR_URL: ${{ github.event.pull_request.html_url }}
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    build:
        needs: init
        permissions:
            contents: read
        runs-on: ubuntu-latest
        strategy:
          matrix:
              goos: [linux, windows, darwin]
              goarch: [amd64, arm64]
        steps:
        - uses: actions/checkout@v4
        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version-file: ./go.mod
  
        - name: Build binary for ${{ matrix.goos }}/${{ matrix.goarch }}
          run: |
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ./bin/jiotv_go-${{ matrix.goos }}-${{ matrix.goarch }} -ldflags "-s -w" .

        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            name: jiotv_go-${{ matrix.goos }}-${{ matrix.goarch }}
            path: ./bin/

    post_success:
      runs-on: ubuntu-latest
      permissions:
          contents: read
          pull-requests: write
      needs: build
      if: success()
      steps:
        - name: Comment Build success
          run: |
            gh pr comment "$PR_URL" --edit-last -b "Build success for this PR ✅. [Download artifacts](${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }})"
          env:
            PR_URL: ${{ github.event.pull_request.html_url }}
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    post_failure:
      runs-on: ubuntu-latest
      permissions:
          contents: read
          pull-requests: write
      needs: build
      if: failure()
      steps:
        - name: Comment Build failed
          run: |
            gh pr comment "$PR_URL" --edit-last -b "Build failed for this PR ❌. [Check logs](${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }})"
          env:
            PR_URL: ${{ github.event.pull_request.html_url }}
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
